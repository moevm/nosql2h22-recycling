{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IMainStorage": {
				"properties": {
					"ID": {
						"type": "string"
					},
					"Date": {
						"type": "string"
					},
					"Type": {
						"type": "string"
					},
					"SubType": {
						"type": "string"
					},
					"Amount": {
						"type": "number",
						"format": "double"
					},
					"Status": {
						"type": "string"
					}
				},
				"required": [
					"ID",
					"Date",
					"Type",
					"SubType",
					"Amount",
					"Status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Orders": {
				"properties": {
					"countOrders": {
						"type": "number",
						"format": "double"
					},
					"orders": {
						"items": {
							"$ref": "#/components/schemas/IMainStorage"
						},
						"type": "array"
					}
				},
				"required": [
					"countOrders",
					"orders"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Answer": {
				"properties": {
					"role": {
						"type": "string"
					}
				},
				"required": [
					"role"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Reception": {
				"properties": {
					"Address": {
						"type": "string"
					},
					"Manager": {
						"type": "string"
					},
					"Paper": {
						"type": "number",
						"format": "double"
					},
					"Metal": {
						"type": "number",
						"format": "double"
					},
					"Plastic": {
						"type": "number",
						"format": "double"
					},
					"Organic": {
						"type": "number",
						"format": "double"
					},
					"Glass": {
						"type": "number",
						"format": "double"
					},
					"Battery": {
						"type": "number",
						"format": "double"
					},
					"Amount": {
						"type": "number",
						"format": "double"
					},
					"Percentage": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"Address",
					"Manager",
					"Percentage"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Receptions": {
				"properties": {
					"countReceptions": {
						"type": "number",
						"format": "double"
					},
					"receptions": {
						"items": {
							"$ref": "#/components/schemas/Reception"
						},
						"type": "array"
					}
				},
				"required": [
					"countReceptions",
					"receptions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Transit": {
				"properties": {
					"carrier": {
						"type": "string"
					},
					"reception": {
						"type": "string"
					},
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"carrier",
					"reception",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Transits": {
				"properties": {
					"countTransits": {
						"type": "number",
						"format": "double"
					},
					"transits": {
						"items": {
							"$ref": "#/components/schemas/Transit"
						},
						"type": "array"
					}
				},
				"required": [
					"countTransits",
					"transits"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IUser.Exclude_keyofIUser.orders__": {
				"properties": {
					"login": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"loyalty": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"login",
					"password",
					"email",
					"role",
					"firstName",
					"lastName",
					"loyalty"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_IUser.orders_": {
				"$ref": "#/components/schemas/Pick_IUser.Exclude_keyofIUser.orders__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Material": {
				"properties": {
					"title": {
						"type": "string"
					},
					"subtype": {
						"type": "string"
					},
					"count": {
						"type": "number",
						"format": "double"
					},
					"price": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"title",
					"subtype",
					"count",
					"price"
				],
				"type": "object",
				"additionalProperties": false
			},
			"History": {
				"properties": {
					"status": {
						"type": "string"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"status",
					"date"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IOrder.Exclude_keyofIOrder.users__": {
				"properties": {
					"status": {
						"type": "string"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"reception": {
						"$ref": "#/components/schemas/Reception"
					},
					"material": {
						"$ref": "#/components/schemas/Material"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/History"
						},
						"type": "array"
					}
				},
				"required": [
					"status",
					"date",
					"reception",
					"material",
					"history"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_IOrder.users_": {
				"$ref": "#/components/schemas/Pick_IOrder.Exclude_keyofIOrder.users__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IOrderResponse": {
				"$ref": "#/components/schemas/Omit_IOrder.users_"
			},
			"OrdersResponse": {
				"properties": {
					"result": {
						"items": {
							"$ref": "#/components/schemas/IOrderResponse"
						},
						"type": "array"
					},
					"count": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"result",
					"count"
				],
				"type": "object"
			},
			"Manager": {
				"properties": {
					"reception": {
						"type": "string"
					},
					"materials": {
						"items": {
							"$ref": "#/components/schemas/Material"
						},
						"type": "array"
					},
					"countMaterials": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"reception",
					"materials",
					"countMaterials"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Request": {
				"properties": {
					"req_id": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"type_of_waste": {
						"type": "number",
						"format": "double"
					},
					"subtype": {
						"type": "number",
						"format": "double"
					},
					"among": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"type": "string"
					}
				},
				"required": [
					"req_id",
					"date",
					"type_of_waste",
					"subtype",
					"among",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Requests": {
				"properties": {
					"countRequests": {
						"type": "number",
						"format": "double"
					},
					"requests": {
						"items": {
							"$ref": "#/components/schemas/Request"
						},
						"type": "array"
					}
				},
				"required": [
					"countRequests",
					"requests"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Order": {
				"properties": {
					"_id": {
						"type": "string"
					},
					"PointOfDeparture": {
						"type": "string"
					},
					"PointOfArrival": {
						"type": "string"
					},
					"TypeOfWaste": {
						"type": "string"
					},
					"Subtype": {
						"type": "string"
					},
					"Amount": {
						"type": "number",
						"format": "double"
					},
					"request": {
						"type": "string",
						"enum": [
							""
						],
						"nullable": false
					}
				},
				"required": [
					"_id",
					"PointOfDeparture",
					"PointOfArrival",
					"TypeOfWaste",
					"Subtype",
					"Amount",
					"request"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Driver": {
				"properties": {
					"driver": {
						"type": "string"
					},
					"orders": {
						"items": {
							"$ref": "#/components/schemas/Order"
						},
						"type": "array"
					},
					"countOrders": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"driver",
					"orders",
					"countOrders"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "nosql2h22-recycling",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/admin/main": {
			"post": {
				"operationId": "Main",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Orders"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Answer"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {},
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/admin/receptions": {
			"post": {
				"operationId": "Receptions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Receptions"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/admin/transit": {
			"post": {
				"operationId": "Transit",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Transits"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/user": {
			"get": {
				"operationId": "User",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Omit_IUser.orders_"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/user/orders": {
			"get": {
				"operationId": "Orders",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OrdersResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/user/order": {
			"post": {
				"operationId": "Order",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/manager/reception": {
			"post": {
				"operationId": "Reception",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Manager"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/manager/export": {
			"post": {
				"operationId": "Export",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/manager/requests": {
			"post": {
				"operationId": "Requests",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Requests"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/driver/main": {
			"post": {
				"operationId": "Main",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Driver"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/driver/orders": {
			"post": {
				"operationId": "Orders",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Orders"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/driver/confirm": {
			"post": {
				"operationId": "Confirm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/order": {
			"get": {
				"operationId": "Order",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/driver/finish": {
			"post": {
				"operationId": "Finish",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}